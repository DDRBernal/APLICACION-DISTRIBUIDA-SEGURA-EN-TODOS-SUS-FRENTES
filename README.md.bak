# AREP - TALLER INTRODUCCION A DOCKER Y A AWS

En este taller realizaremos un aplicativo web que tenga un acceso seguro a los usuarios autorizados, para eso usaremos certificados y llaves para garantizar la autenticación, autorización e integridad.

# Prerequisitos del sistemas
- Maven
- Git
- Java
- Docker
- AWS (EC2)

# Instalacion

Primero vamos a clonar el repositorio con el siguiente comando:

`git clone https://github.com/DDRBernal/AREP_arquitectura_de_servidores`

Una vez descargado, en CMD ingresamos a la carpeta con nuestros archivos e ingresamos el siguiente comando:

`mvn package`

# Como usar

Tenemos 3 clases `Control_access` que permite verificar que la contraseña que el usuario (autorizado) ingresó sea la correcta,
 `SecureURLReader` que permite crear las llaves necesarias para poder ingresar, ademas de verificar que con dichas llaves se ingrese al sitio web 
 y `SparkWebServer` que será donde corramos el servidor web con Spark.
 
 Para poder ingresar, primero debemos crear nuestras llaves y el certificado para el sitio web.
 
 ![image](https://user-images.githubusercontent.com/46855679/199153114-db7dda18-b596-4508-88ee-e829f1cdb7a7.png)
 
 Y el certificado junto con una keystore.
 
 ![image](https://user-images.githubusercontent.com/46855679/199154275-54d657be-5fa0-4bfd-84c0-437ba3bf23e2.png)
 
 
 keytool -export -keystore ./keystores/ecikeystore.p12 -alias ecikeypair -file certificateECI.cer 
 
 ![image](https://user-images.githubusercontent.com/46855679/199155177-46225d60-9dc8-4fa2-a21d-ce491d27d6b5.png)
 
 keytool -import -file ./certificateECI.cer -alias certECI -keystore ECIKeyStore

 Lo siguiente será subirlo a Docker con el siguiente comando (no olvidar usar `mvn package` y `mvn test` antes de)
 
 ![image](https://user-images.githubusercontent.com/46855679/199156540-c31f392f-972c-47e9-bbbb-1b0167df0f22.png)
 
 


![image](https://user-images.githubusercontent.com/46855679/198914086-88e62428-b132-4e03-bb5d-ccac3c241297.png)
















